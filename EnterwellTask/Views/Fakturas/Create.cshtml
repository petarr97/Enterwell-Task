@model EnterwellTask.Models.CreateFakturaModel

@{
    ViewBag.Title = "Create";
}

    <div class="data-div">
        <table class="table">
            <tr>
                <th>#</th>
                <th>
                    Naziv
                </th>
                <th>
                    Cijena
                </th>
                <th>
                    Kolicina
                </th>
                <th></th>
            </tr>

            @for (int i = 0; i < Model.Stavke.Count; i++)
            {
                <tr>
                    <td>
                        @(i+1)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Stavke[i].Opis)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.Stavke[i].Cijena)
                    </td>
                    <td>
                        <input type="text" style="width:7%" value="1" id="@Model.Stavke[i].StavkaID" />
                    </td>
                    <td>
                        <input type="button" class="btn btn-success" onclick="funkcija('@Model.Stavke[i].Opis','@Model.Stavke[i].Cijena',@Model.Stavke[i].StavkaID)" value="Dodaj" />
                    </td>
                </tr>

            }
        </table>
    </div>
    <div class="stavke-div">
        <div style="background-color:ghostwhite;"><label style="font-size:20px">Ukupna cijena : </label><label  style="font-size:20px" id="ukupna-cijena">0</label><label  style="font-size:20px">K</label></div>
        <table class="table">
            <thead>
            <th>ID</th>
            <th>Ime</th>
            <th>Cijena</th>
            <th>Kolicina</th>
            <th></th>
            </thead>
            <tbody id="tbody">
            </tbody>
        </table>
    </div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" >
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Faktura.DatumDospijeca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Faktura.DatumDospijeca, new { htmlAttributes = new { @class = "form-control", @id ="datum-dospijeca" } })
                @Html.ValidationMessageFor(model => model.Faktura.DatumDospijeca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Faktura.PrimateljRacuna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Faktura.PrimateljRacuna, new { htmlAttributes = new { @class = "form-control", @id = "primatelj-racuna" } })
                @Html.ValidationMessageFor(model => model.Faktura.PrimateljRacuna, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-horizontal">
            <label  style="width:20%; display:inline-block"class="control-label col-md-2">Izaberite obracun poreza: </label>
            <select style="margin-left:1%;margin-top:1%;:inline-block" id="dropdown">
                <option value="0" selected="selected">Hrvatska</option>
                <option value="1">Bosna</option>
            </select>
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button style="margin-top:5%;width:10%;"  onClick="createFaktura()" class="btn btn-default" >Create</button>
            </div>
        </div>
    </div>

    
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    function createFaktura() {

        let datum = document.getElementById("datum-dospijeca").value;
        let primatelj = document.getElementById("primatelj-racuna").value;
        let cijena = parseFloat(document.getElementById("ukupna-cijena").innerHTML);
        let dropdown = document.getElementById("dropdown");
        var taksa = dropdown.options[dropdown.selectedIndex].text;
      

        var stavke = [];
        let listaIzabranihStavki = document.getElementById("tbody").getElementsByTagName("tr");
       
        for (let i = 0; i < listaIzabranihStavki.length; i++) {

            let tr = listaIzabranihStavki[i].getElementsByTagName("td");
            var Stavka = {
                Id: tr[0].innerHTML,
                Kolicina: tr[3].innerHTML,
            }

            stavke.push(Stavka);
        }
        if (stavke.length == 0 || datum === "" || primatelj === "") {
            alert("Morate popuniti sva polja, i izabrati stavke fakture!!!");
            return;
        }
        
        var data = {
            Stavke: stavke,
            DatumDospijeca: datum,
            Primatelj: primatelj,
            Cijena: cijena,
            Taksa: taksa
        }

        
        var settings = {
            "url": "https://localhost:44379/Fakturas/AddFaktura",
            "method": "POST",
            "timeout": 0,
            "headers": {
                "Content-Type": "application/json",
                "Cookie": "__RequestVerificationToken=4HexYm3ZgcPWVDcwx7XciLxUjnqGKyrrDUxaHNIQAUqZXr51WscTa_KAyGwOrxAvW2VPjFxYUtu-JXlbuZPRqz6jVVCyIjj2O7IRFVoSPa01"
            },
            "data": JSON.stringify(data),
        };

        $.ajax(settings).done(function (response) {
            console.log(response);
        });
    }

    function delFunc(id) {

        var cijena = document.getElementById(id).getElementsByClassName("cijena")[0].innerHTML;
        var kolicina = document.getElementById(id).getElementsByClassName("kol")[0].innerHTML;

        document.getElementById("ukupna-cijena").innerHTML = parseFloat(document.getElementById("ukupna-cijena").innerHTML) - parseFloat(cijena) * parseInt(kolicina);
        document.getElementById(id).remove();

    }

    function funkcija(opis, cijena, id) {

        var kolicina = document.getElementById(id);
        var ukupnaCijena = document.getElementById("ukupna-cijena");
        ukupnaCijena.innerHTML = parseFloat(ukupnaCijena.innerHTML) + parseInt(kolicina.value)*parseFloat(cijena);

        var element = document.getElementById("tbody");
        var newId = 'tr' + id;

        if (document.getElementById(newId) != null) {
            var editEl = document.getElementById(newId);
            editEl.getElementsByClassName("kol")[0].innerHTML = parseInt(editEl.getElementsByClassName("kol")[0].innerHTML)+parseInt(kolicina.value);
        }
        else
            element.innerHTML += "<tr id=" + newId + "><td>"+id+"</td><td>" + opis + "</td><td class='cijena'>" + cijena + "</td><td class='kol'>" + kolicina.value + "</td><td><button onclick=delFunc('" + newId + "')>Izbrisi</button></td></tr>";
    }
</script>
<style>
    label{
        height:10%;
        font-weight:bold;
    }
    .data-div {
        margin-top: 3%;
        background-color: #f0f0f0;
    }
    th {
        background-color: #222;
        color:white;
    }
    .stavke-div {
        background-color: #f0f0f0;
    }
    .btn-success {
        background-color: #659490;
    }
    input:hover {
        transform: scale(1.1); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */
        background-color:floralwhite;
    }
    .form-group {
        text-align: left;
    }
</style>